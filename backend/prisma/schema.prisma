// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMINISTRADOR
  FINANCEIRO
  PRODUCAO
  VENDAS
  ESTOQUE
}

enum TipoPessoa {
  PESSOA_FISICA
  PESSOA_JURIDICA
}

enum StatusConta {
  PENDENTE_VERIFICACAO
  ATIVO
  INATIVO
  BLOQUEADO
}

enum StatusLoja {
  PENDENTE_VERIFICACAO
  ATIVO
  INATIVO
  BLOQUEADO
}

model Loja {
  id                  String    @id @default(cuid())
  nome                String
  cnpj                String?   @unique
  cpf                 String?   @unique
  telefone            String
  email               String    @unique
  status              StatusLoja @default(PENDENTE_VERIFICACAO)
  data_inicio_trial   DateTime?
  trial_restante_dias Int?
  assinatura_ativa    Boolean   @default(false)
  stripe_customer_id  String?   @unique

  // Campos de configuração da loja
  logo_url                 String?
  cabecalho_orcamento      String?   @db.Text
  custo_maodeobra_hora     Decimal?  @db.Decimal(10, 2)
  custo_maquinaria_hora    Decimal?  @db.Decimal(10, 2)
  custos_indiretos_mensais Decimal?  @db.Decimal(10, 2)
  margem_lucro_padrao      Decimal?  @db.Decimal(5, 2)
  impostos_padrao          Decimal?  @db.Decimal(5, 2)

  // Relacionamentos
  usuarios     Usuario[]
  clientes     Cliente[]
  categorias   Categoria[]
  fornecedores Fornecedor[]
  insumos      Insumo[]

  criado_em   DateTime @default(now())
  atualizado_em DateTime @updatedAt
}

model Usuario {
  id                                 String        @id @default(cuid())
  nome_completo                      String
  email                              String        @unique
  senha                              String
  telefone                           String
  funcao                             FuncaoUsuario @default(VENDAS)
  status                             StatusConta   @default(PENDENTE_VERIFICACAO)
  email_verificado                   Boolean       @default(false)
  codigo_verificacao_email           String?
  codigo_verificacao_email_expiracao DateTime?

  loja_id String
  loja    Loja   @relation(fields: [loja_id], references: [id], onDelete: Cascade)

  criado_em     DateTime @default(now())
  atualizado_em DateTime @updatedAt

  @@index([loja_id])
}

enum FuncaoUsuario {
  ADMINISTRADOR
  FINANCEIRO
  PRODUCAO
  VENDAS
  ESTOQUE
}

model Cliente {
  id            String   @id @default(cuid())
  criado_em     DateTime @default(now())
  atualizado_em DateTime @updatedAt

  // Dados básicos
  nome        String
  tipo_pessoa TipoPessoa
  documento   String // CPF ou CNPJ

  // Contato
  email    String?
  telefone String?
  whatsapp String?

  // Endereço
  cep         String?
  endereco    String?
  numero      String?
  complemento String?
  bairro      String?
  cidade      String?
  estado      String?

  // Informações comerciais
  razao_social       String? // Para PJ
  nome_fantasia      String? // Para PJ
  inscricao_estadual String? // Para PJ
  responsavel        String? // Nome do contato principal
  cargo_responsavel  String? // Cargo do contato

  // CRM
  observacoes    String?       @db.Text
  status_cliente StatusCliente @default(ATIVO)
  origem         String? // Como conheceu a empresa
  segmento       String? // Setor de atuação

  // Multi-tenant
  loja_id String
  loja    Loja   @relation(fields: [loja_id], references: [id], onDelete: Cascade)

  @@index([loja_id])
  @@index([loja_id, nome])
  @@index([loja_id, documento])
}

enum StatusCliente {
  ATIVO
  INATIVO
  PROSPECT
  BLOQUEADO
}

model Insumo {
  id                  String      @id @default(cuid())
  criado_em           DateTime    @default(now())
  atualizado_em       DateTime    @updatedAt
  loja_id             String
  nome                String
  descricao_tecnica   String?
  unidade_medida      String
  custo_unitario      Decimal     @db.Decimal(10, 2)
  estoque_minimo      Int?
  codigo_interno      String?
  observacoes         String?
  // Relacionamentos
  loja                Loja        @relation(fields: [loja_id], references: [id], onDelete: Cascade)
  categoriaId         String
  categoria           Categoria   @relation(fields: [categoriaId], references: [id])
  fornecedorId        String
  fornecedor          Fornecedor  @relation(fields: [fornecedorId], references: [id])

  @@map("insumos")
}

model Categoria {
  id      String   @id @default(cuid())
  loja_id String
  nome    String
  // Relacionamentos
  loja    Loja     @relation(fields: [loja_id], references: [id], onDelete: Cascade)
  insumos Insumo[]

  @@unique([loja_id, nome])
  @@map("categorias")
}

model Fornecedor {
  id    String @id @default(cuid())
  nome  String

  // Multi-tenant
  loja_id String
  loja    Loja   @relation(fields: [loja_id], references: [id], onDelete: Cascade)

  insumos Insumo[]

  @@unique([loja_id, nome])
  @@index([loja_id])
}
