// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMINISTRADOR
  FINANCEIRO
  PRODUCAO
  VENDAS
  ESTOQUE
}

enum TipoPessoa {
  PESSOA_FISICA
  PESSOA_JURIDICA
}

enum StatusConta {
  PENDENTE_VERIFICACAO
  ATIVO
  INATIVO
  BLOQUEADO
}

enum StatusLoja {
  PENDENTE_VERIFICACAO
  ATIVO
  INATIVO
  BLOQUEADO
}

model Loja {
  id                  String    @id @default(cuid())
  nome                String
  cnpj                String?   @unique
  cpf                 String?   @unique
  telefone            String
  email               String    @unique
  status              StatusLoja @default(PENDENTE_VERIFICACAO)
  data_inicio_trial   DateTime?
  trial_restante_dias Int?
  assinatura_ativa    Boolean   @default(false)
  stripe_customer_id  String?   @unique

  // Campos de configuração da loja
  logo_url                 String?
  cabecalho_orcamento      String?   @db.Text
  custo_maodeobra_hora     Decimal?  @db.Decimal(10, 2)
  custo_maquinaria_hora    Decimal?  @db.Decimal(10, 2)
  custos_indiretos_mensais Decimal?  @db.Decimal(10, 2)
  margem_lucro_padrao      Decimal?  @db.Decimal(5, 2)
  impostos_padrao          Decimal?  @db.Decimal(5, 2)
  horas_produtivas_mensais Int?      @default(352) // 2 colaboradores * 176 horas/mês

  // Relacionamentos
  usuarios     Usuario[]
  clientes     Cliente[]
  categorias   Categoria[]
  fornecedores Fornecedor[]
  insumos      Insumo[]
  orcamentos  Orcamento[]
  maquinas     Maquina[]
  funcoes      Funcao[]
  custos_indiretos CustoIndireto[]

  criado_em   DateTime @default(now())
  atualizado_em DateTime @updatedAt
}

model Usuario {
  id                                 String        @id @default(cuid())
  nome_completo                      String
  email                              String        @unique
  senha                              String
  telefone                           String
  funcao                             FuncaoUsuario @default(VENDAS)
  status                             StatusConta   @default(PENDENTE_VERIFICACAO)
  email_verificado                   Boolean       @default(false)
  codigo_verificacao_email           String?
  codigo_verificacao_email_expiracao DateTime?

  loja_id String
  loja    Loja   @relation(fields: [loja_id], references: [id], onDelete: Cascade)

  criado_em     DateTime @default(now())
  atualizado_em DateTime @updatedAt

  @@index([loja_id])
}

enum FuncaoUsuario {
  ADMINISTRADOR
  FINANCEIRO
  PRODUCAO
  VENDAS
  ESTOQUE
}

model Cliente {
  id            String   @id @default(cuid())
  criado_em     DateTime @default(now())
  atualizado_em DateTime @updatedAt

  // Dados básicos
  nome        String
  tipo_pessoa TipoPessoa
  documento   String // CPF ou CNPJ

  // Contato
  email    String?
  telefone String?
  whatsapp String?

  // Endereço
  cep         String?
  endereco    String?
  numero      String?
  complemento String?
  bairro      String?
  cidade      String?
  estado      String?

  // Informações comerciais
  razao_social       String? // Para PJ
  nome_fantasia      String? // Para PJ
  inscricao_estadual String? // Para PJ
  responsavel        String? // Nome do contato principal
  cargo_responsavel  String? // Cargo do contato

  // CRM
  observacoes    String?       @db.Text
  status_cliente StatusCliente @default(ATIVO)
  origem         String? // Como conheceu a empresa
  segmento       String? // Setor de atuação

  // Multi-tenant
  loja_id String
  loja    Loja   @relation(fields: [loja_id], references: [id], onDelete: Cascade)

  orcamentos Orcamento[]

  @@index([loja_id])
  @@index([loja_id, nome])
  @@index([loja_id, documento])
}

enum StatusCliente {
  ATIVO
  INATIVO
  PROSPECT
  BLOQUEADO
}

model Insumo {
  id                  String      @id @default(cuid())
  criado_em           DateTime    @default(now())
  atualizado_em       DateTime    @updatedAt
  loja_id             String
  nome                String
  descricao_tecnica   String?
  unidade_medida      String
  custo_unitario      Decimal     @db.Decimal(10, 2)
  estoque_minimo      Int?
  codigo_interno      String?
  observacoes         String?
  // Relacionamentos
  loja                Loja        @relation(fields: [loja_id], references: [id], onDelete: Cascade)
  categoriaId         String
  categoria           Categoria   @relation(fields: [categoriaId], references: [id])
  fornecedorId        String
  fornecedor          Fornecedor  @relation(fields: [fornecedorId], references: [id])
  itens               ItemOrcamento[]

  @@map("insumos")
}

model Categoria {
  id      String   @id @default(cuid())
  loja_id String
  nome    String
  // Relacionamentos
  loja    Loja     @relation(fields: [loja_id], references: [id], onDelete: Cascade)
  insumos Insumo[]

  @@unique([loja_id, nome])
  @@map("categorias")
}

model Fornecedor {
  id    String @id @default(cuid())
  nome  String

  // Multi-tenant
  loja_id String
  loja    Loja   @relation(fields: [loja_id], references: [id], onDelete: Cascade)

  insumos Insumo[]

  @@unique([loja_id, nome])
  @@index([loja_id])
}

model Maquina {
  id                String   @id @default(cuid())
  criado_em         DateTime @default(now())
  atualizado_em     DateTime @updatedAt
  
  nome              String
  tipo              String   // "PLOTTER", "ROUTER", "IMPRESSORA", "CORTE", "OUTROS"
  custo_hora        Decimal  @db.Decimal(10, 2)
  status            String   @default("ATIVA") // "ATIVA", "MANUTENCAO", "INATIVA"
  capacidade        String?  // "1200x800mm", "2x1m", etc.
  observacoes       String?  @db.Text
  
  // Multi-tenant
  loja_id           String
  loja              Loja     @relation(fields: [loja_id], references: [id], onDelete: Cascade)
  
  // Relacionamentos
  funcoes           Funcao[]
  maquinas_orcamento MaquinaOrcamento[]
  historico_custos  HistoricoCustoMaquina[]
  
  @@index([loja_id])
  @@index([loja_id, tipo])
}

model Funcao {
  id                String   @id @default(cuid())
  criado_em         DateTime @default(now())
  atualizado_em     DateTime @updatedAt
  
  nome              String   // "Operador Plotter", "Designer", "Auxiliar"
  custo_hora        Decimal  @db.Decimal(10, 2)
  descricao         String?  @db.Text
  
  // Relacionamento opcional com máquina específica
  maquina_id        String?
  maquina           Maquina? @relation(fields: [maquina_id], references: [id], onDelete: SetNull)
  
  // Multi-tenant
  loja_id           String
  loja              Loja     @relation(fields: [loja_id], references: [id], onDelete: Cascade)
  
  // Relacionamentos
  funcoes_orcamento FuncaoOrcamento[]
  historico_custos  HistoricoCustoFuncao[]
  
  @@index([loja_id])
  @@index([maquina_id])
}

model CustoIndireto {
  id                String   @id @default(cuid())
  criado_em         DateTime @default(now())
  atualizado_em     DateTime @updatedAt
  
  nome              String   // "Aluguel", "Água", "Luz", "Internet"
  valor_mensal      Decimal  @db.Decimal(10, 2)
  categoria         String   // "LOCACAO", "SERVICOS", "MANUTENCAO", "OUTROS"
  ativo             Boolean  @default(true)
  regra_rateio      String   @default("PROPORCIONAL_TEMPO") // "PROPORCIONAL_TEMPO", "PROPORCIONAL_VALOR", "FIXO"
  observacoes       String?  @db.Text
  
  // Multi-tenant
  loja_id           String
  loja              Loja     @relation(fields: [loja_id], references: [id], onDelete: Cascade)
  
  @@index([loja_id])
  @@index([loja_id, categoria])
}

model Orcamento {
  id              String    @id @default(cuid())
  criado_em       DateTime  @default(now())
  atualizado_em   DateTime  @updatedAt
  numero          String
  nome_servico    String
  descricao       String?   @db.Text
  horas_producao  Decimal   @db.Decimal(10, 2)
  
  // Custos calculados
  custo_material      Decimal @db.Decimal(10, 2)
  custo_mao_obra      Decimal @db.Decimal(10, 2)
  custo_indireto      Decimal @db.Decimal(10, 2)
  custo_total         Decimal @db.Decimal(10, 2)
  margem_lucro        Decimal @db.Decimal(5, 2)
  impostos            Decimal @db.Decimal(5, 2)
  preco_final         Decimal @db.Decimal(10, 2)
  
  // Relacionamentos
  loja_id     String
  loja        Loja     @relation(fields: [loja_id], references: [id], onDelete: Cascade)
  cliente_id  String?
  cliente     Cliente? @relation(fields: [cliente_id], references: [id], onDelete: SetNull)
  
  itens       ItemOrcamento[]
  maquinas    MaquinaOrcamento[]
  funcoes     FuncaoOrcamento[]
  
  @@unique([loja_id, numero])
  @@index([loja_id])
  @@index([loja_id, numero])
}

model MaquinaOrcamento {
  id              String    @id @default(cuid())
  orcamento_id    String
  orcamento       Orcamento @relation(fields: [orcamento_id], references: [id], onDelete: Cascade)
  
  maquina_id      String
  maquina         Maquina   @relation(fields: [maquina_id], references: [id], onDelete: Restrict)
  
  horas_utilizadas Decimal  @db.Decimal(10, 2)
  custo_total     Decimal   @db.Decimal(10, 2)
  
  @@index([orcamento_id])
  @@index([maquina_id])
}

model FuncaoOrcamento {
  id              String    @id @default(cuid())
  orcamento_id    String
  orcamento       Orcamento @relation(fields: [orcamento_id], references: [id], onDelete: Cascade)
  
  funcao_id       String
  funcao          Funcao    @relation(fields: [funcao_id], references: [id], onDelete: Restrict)
  
  horas_trabalhadas Decimal @db.Decimal(10, 2)
  custo_total     Decimal   @db.Decimal(10, 2)
  
  @@index([orcamento_id])
  @@index([funcao_id])
}

model ItemOrcamento {
  id              String    @id @default(cuid())
  orcamento_id    String
  orcamento       Orcamento @relation(fields: [orcamento_id], references: [id], onDelete: Cascade)
  
  insumo_id       String
  insumo          Insumo    @relation(fields: [insumo_id], references: [id], onDelete: Restrict)
  
  quantidade      Decimal   @db.Decimal(10, 3)
  custo_unitario  Decimal   @db.Decimal(10, 2)
  custo_total     Decimal   @db.Decimal(10, 2)
  
  @@index([orcamento_id])
  @@index([insumo_id])
}

model HistoricoCustoMaquina {
  id          String   @id @default(cuid())
  maquina_id  String
  custo_hora  Decimal  @db.Decimal(10, 2)
  data_inicio DateTime @default(now())
  data_fim    DateTime?
  observacoes String?
  criado_em   DateTime @default(now())

  // Relacionamentos
  maquina     Maquina  @relation(fields: [maquina_id], references: [id], onDelete: Cascade)

  @@map("historico_custo_maquinas")
}

model HistoricoCustoFuncao {
  id          String   @id @default(cuid())
  funcao_id   String
  custo_hora  Decimal  @db.Decimal(10, 2)
  data_inicio DateTime @default(now())
  data_fim    DateTime?
  observacoes String?
  criado_em   DateTime @default(now())

  // Relacionamentos
  funcao      Funcao   @relation(fields: [funcao_id], references: [id], onDelete: Cascade)

  @@map("historico_custo_funcoes")
}
